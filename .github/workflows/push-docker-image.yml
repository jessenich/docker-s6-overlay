name: "Push Docker Image"

on:
  push:
    tags:
      - "v*"

env:
  TARGET_PLATFORMS: linux/amd64,linux/arm64/v8,linux/arm/v7
  GHCR_URL: ghcr.io
  GHCR_LIBRARY: jessenich
  GHCR_REPO: s6-overlay-base
  DOCKERHUB_LIBRARY: jessenich91
  DOCKERHUB_REPO: s6-overlay-base
  LABELS: |
    maintainer=Jesse N. <jesse@keplerdev.com>
    org.opencontainers.image.author=Jesse N. <jesse@keplerdev.com>
    org.opencontainers.image.source=https://github.com/jessenich/docker-s6-overlay/

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distribution: [ "alpine", "debian", "ubuntu" ]
        arch: [ "amd64", "armhf", "aarch64" ]
        variant: [ "latest" ]



    name: "Build ${{ matrix.distribution }} ${{ matrix.arch }} ${{ matrix.variant }}"
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
            version: latest
            install: true
            driver-opts: image=moby/buildkit:master
            use: true

      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ${{ env.GHCR_URL }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          labels: ${{ env.LABELS }}
          images: |
            "docker.io/${{ env.DOCKERHUB_LIBRARY }}/${{ env.DOCKERHUB_REPO }}
            "ghcr.io/${{ env.GHCR_LIBRARY }}/${{ env.GHCR_REPO }}
          tags: |
            type=raw,enable=${{ matrix.variant == 'latest' && matrix.platform == 'amd64' }},priority=100,value=${{ matrix.distribution }}
            type=raw,enable=${{ matrix.variant == 'latest' }},priority=200,value=${{ matrix.distribution }}-${{ matrix.platform }}
            type=semver,enable=${{ matrix.variant == 'latest' && matrix.platform == 'amd64' }},priority=300,pattern={{major}}.{{minor}}.{{patch}},suffix=${{ matrix.distribution }}
            type=semver,enable=${{ matrix.variant == 'latest' }},priority=300,pattern={{major}}.{{minor}}.{{patch}},suffix=${{ matrix.distribution }}-${{ matrix.platform }}
          flavor: latest=false

      - name: Build & Push Latest
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          labels: ${{ steps.meta.output.labels }}
          build-args: |
            PLATFORM=${{ matrix.arch }}
            DISTRIBUTION=${{ matrix.distribution }}
            VARIANT=${{ matrix.variant }}
            TZ=America/New_York
          platforms: linux/amd64,linux/arm64/v8,linux/arm/v7
          pull: true
          push: true
          tags: ${{ steps.meta.outputs.tags }}
